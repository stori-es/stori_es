files:
  "/etc/httpd/conf.d/elasticbeanstalk.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # In order to effect some custom redirects, it's necesary to get
      # into the VirtualHost; otherwise there's no way to connect the
      # rewrites to the VirtualHost (global redirects do not trickle
      # down by default). Everything but the 'Include' and
      # 'ServersToken' directive is copied from the original / default
      # beanstalk config.
      <VirtualHost *:80>
        <Proxy *>
          Order deny,allow
          Allow from all
        </Proxy>
        
        ProxyPass / http://localhost:8080/ retry=0
        ProxyPassReverse / http://localhost:8080/
        ProxyPreserveHost on
        
        ServerSignature Off
        
        LogFormat "%h (%{X-Forwarded-For}i) %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\""
        ErrorLog /var/log/httpd/elasticbeanstalk-error_log
        TransferLog /var/log/httpd/elasticbeanstalk-access_log
        
        Include /etc/httpd/conf.d/stories.conf.inc
      </VirtualHost>
      ServerTokens Prod
    encoding: plain
  "/etc/httpd/conf.d/stories.conf.inc":
    mode: "000644"
    owner: root
    group: root
    content: |
      RewriteEngine on
      # Redirect bare requests to the public website. 'www' is the public site, the app is hosted on 'stori.es', a 
      # different host.
      RewriteCond %{HTTP_HOST} ^stori\.es [NC]
      RewriteRule ^/$ http://www.stori.es/ [R,L]
      
      # Redirect /buzz requests to the public website. See note above.
      RewriteCond %{HTTP_HOST} ^www\.stori.es [NC,OR]
      RewriteCond %{HTTP_HOST} ^stori\.es [NC]
      RewriteRule ^/buzz(.*)$ http://www.stori.es/$1 [R,L]
      
      RewriteCond %{HTTPS} !on
      RewriteCond %{HTTP:X-Forwarded-Proto} !https
      RewriteCond %{SERVER_NAME} !localhost 
      RewriteCond %{THE_REQUEST} !/_hostmanager/.*
      # The original logic for this RewriteRule is limited to production, it seems to make sense for all environments,
      # but it doesn't work. Actually... may not work on production (hasn't been tested yet as of time of this writing).
      RewriteCond %{HTTP_HOST} ^www\.stori.es [NC,OR]
      RewriteCond %{HTTP_HOST} ^stori\.es [NC] 
      RewriteRule ^(.*)$ https://%{SERVER_NAME}%{REQUEST_URI} [R,L]
    encoding: plain
